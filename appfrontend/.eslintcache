[{"/app/src/index.js":"1","/app/src/components/App.js":"2","/app/src/redux/combineReducers.js":"3","/app/src/components/NavigationBar.js":"4","/app/src/components/NewItem.js":"5","/app/src/components/HomePage.js":"6","/app/src/redux/database.js":"7","/app/src/redux/NavigationBar.js":"8","/app/src/components/Authentication/Login.js":"9","/app/src/components/ToDoList.js":"10","/app/src/components/FilterBar.js":"11","/app/src/api/API_LINK.js":"12","/app/src/api/API_CRUD.js":"13","/app/src/components/ToDoCard.js":"14","/app/src/components/Authentication/AuthenticatedRoutes.js":"15","/app/src/api/API_AUTHEN.js":"16","/app/src/components/Authentication/NotFoundPage.js":"17","/app/src/components/WelcomePage.js":"18","/app/src/redux/userID.js":"19","/app/src/redux/userName.js":"20","/app/src/components/Authentication/NonAuthenticatedRoutes.js":"21","/app/src/components/ToDoCardContent.js":"22","/app/src/components/LoadSpinner.js":"23","/app/src/redux/sortType.js":"24","/app/src/redux/filterTag.js":"25","/app/src/redux/filterDueDate.js":"26"},{"size":336,"mtime":1609869024520,"results":"27","hashOfConfig":"28"},{"size":1593,"mtime":1610434273600,"results":"29","hashOfConfig":"28"},{"size":698,"mtime":1610430301820,"results":"30","hashOfConfig":"28"},{"size":2359,"mtime":1610434629400,"results":"31","hashOfConfig":"28"},{"size":5250,"mtime":1610434633090,"results":"32","hashOfConfig":"28"},{"size":319,"mtime":1610434284700,"results":"33","hashOfConfig":"28"},{"size":321,"mtime":1609869079760,"results":"34","hashOfConfig":"28"},{"size":559,"mtime":1609869082930,"results":"35","hashOfConfig":"28"},{"size":3044,"mtime":1610434507620,"results":"36","hashOfConfig":"28"},{"size":3202,"mtime":1610434636570,"results":"37","hashOfConfig":"28"},{"size":3291,"mtime":1610464909570,"results":"38","hashOfConfig":"28"},{"size":520,"mtime":1610438084550,"results":"39","hashOfConfig":"28"},{"size":2539,"mtime":1610434425090,"results":"40","hashOfConfig":"28"},{"size":1415,"mtime":1610412268110,"results":"41","hashOfConfig":"28"},{"size":1035,"mtime":1610411271230,"results":"42","hashOfConfig":"28"},{"size":2654,"mtime":1610438464210,"results":"43","hashOfConfig":"28"},{"size":541,"mtime":1610199224170,"results":"44","hashOfConfig":"28"},{"size":1399,"mtime":1610434317650,"results":"45","hashOfConfig":"28"},{"size":448,"mtime":1610367157390,"results":"46","hashOfConfig":"28"},{"size":452,"mtime":1610357468150,"results":"47","hashOfConfig":"28"},{"size":814,"mtime":1610434479420,"results":"48","hashOfConfig":"28"},{"size":1156,"mtime":1610434332490,"results":"49","hashOfConfig":"28"},{"size":258,"mtime":1610434378390,"results":"50","hashOfConfig":"28"},{"size":528,"mtime":1610434641920,"results":"51","hashOfConfig":"28"},{"size":364,"mtime":1610430145212,"results":"52","hashOfConfig":"28"},{"size":545,"mtime":1610432716190,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"19yot3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/app/src/index.js",[],["109","110"],"/app/src/components/App.js",[],"/app/src/redux/combineReducers.js",[],"/app/src/components/NavigationBar.js",[],"/app/src/components/NewItem.js",["111"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { API_LINK_ITEMS_POSTFIX } from \"../api/API_LINK\";\r\nimport \"./CSS/NewItem.css\";\r\nimport { markCompletion, deleteEntry, onFormEdit, onFormSubmit } from \"../api/API_CRUD\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport Datetime from \"react-datetime\";\r\nimport moment from \"moment\";\r\n\r\nconst NewItem = ({ match }) => {\r\n  // Title and body can be converted 1 state, but flattened so as to prevent double re-rendering.\r\n  const [titleState, setTitle] = useState(\"\");\r\n  const [bodyState, setBody] = useState(\"\");\r\n  const userID = useSelector((state) => state.IDState);\r\n\r\n  // The tagInputBar requires 2 states to work.\r\n  const [tagState, setTags] = useState([]);\r\n  const [currentTag, setCurrentTag] = useState([]);\r\n\r\n  const history = useHistory();\r\n  const isNewItem = useCallback(() => match.path === \"/create\", [match]);\r\n  const isCompleted = useCallback(() => match.path === \"/completed/:id\", [match]);\r\n\r\n  // Calendar-related var\r\n  var inputProps = { placeholder: \"Due date\" };\r\n  const [calendarDate, setCalendarDate] = useState(\"\"); // Returns as a date-time object\r\n  var yesterday = moment().subtract(1, \"day\");\r\n  var valid = function (current) {\r\n    return current.isAfter(yesterday);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fills up the form for put request.\r\n    const refreshArticle = async () => {\r\n      if (!isNewItem()) {\r\n        const itemDetails = await axios.get(`${API_LINK_ITEMS_POSTFIX}/${match.params.id}`);\r\n        setTitle(itemDetails.data.data.title);\r\n        setBody(itemDetails.data.data.body);\r\n        // Parse the tags, and set them to the tagState\r\n        setTags(\r\n          itemDetails.data.data.tag_list.map((tag) => {\r\n            const newObj = { key: tag, text: tag, value: tag };\r\n            return newObj;\r\n          })\r\n        );\r\n        setCalendarDate(new Date(itemDetails.data.data.due_date));\r\n        setCurrentTag(itemDetails.data.data.tag_list);\r\n      } else {\r\n        // Resets state, if user changes from edit to create via navBar.\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n        setTags(\"\");\r\n        setCalendarDate(\"\");\r\n      }\r\n    };\r\n    refreshArticle();\r\n  }, [match.path]);\r\n\r\n  // Conditional rendering of the buttons\r\n  const submitEditButton = <button type=\"submit\">{isNewItem() ? \"Submit\" : \"Edit\"}</button>;\r\n  const deleteButton = isNewItem() ? (\r\n    <></>\r\n  ) : (\r\n    <button onClick={() => deleteEntry(match.params.id, match)}> {\"Delete\"} </button>\r\n  );\r\n\r\n  const completeIncompleteButton = isNewItem() ? ( // Double ternary\r\n    <></>\r\n  ) : isCompleted() ? (\r\n    <button onClick={() => markCompletion(match.params.id, true)}>{\"Mark as Incomplete\"}</button>\r\n  ) : (\r\n    <button onClick={() => markCompletion(match.params.id, false)}>{\"Mark as Complete\"}</button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"NewItemBody\">\r\n      <form\r\n        className=\"NewItemform\"\r\n        onSubmit={(event) =>\r\n          isNewItem()\r\n            ? onFormSubmit(event, userID, titleState, bodyState, currentTag.toString(), calendarDate, match, history)\r\n            : onFormEdit(\r\n                event,\r\n                userID,\r\n                match.params.id,\r\n                titleState,\r\n                bodyState,\r\n                currentTag.toString(),\r\n                calendarDate,\r\n                match,\r\n                history\r\n              )\r\n        }\r\n      >\r\n        <h1> {isNewItem() ? \"Create new item!\" : \"Edit item!\"} </h1>\r\n        <label>\r\n          Title:\r\n          <input\r\n            value={titleState}\r\n            onInput={(e) => setTitle(e.target.value)}\r\n            required\r\n            minLength=\"3\"\r\n            maxLength=\"27\"\r\n            placeholder=\"Item Title, e.g Go surfing at 6pm\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Body:\r\n          <textarea\r\n            value={bodyState}\r\n            onInput={(e) => setBody(e.target.value)}\r\n            required\r\n            minLength=\"5\"\r\n            maxLength=\"300\"\r\n            placeholder=\"Item Body, e.g Remember to book tickets to Hawaii\"\r\n          />\r\n        </label>\r\n        <Datetime\r\n          dateFormat=\"YYYY-MM-DD\"\r\n          timeFormat={false}\r\n          onChange={(e) => {\r\n            setCalendarDate(e._d);\r\n          }}\r\n          closeOnSelect\r\n          isValidDate={valid}\r\n          inputProps={inputProps}\r\n          value={isNewItem() ? null : new Date(calendarDate)}\r\n        />\r\n        <Dropdown\r\n          options={tagState}\r\n          placeholder=\"Tags!\"\r\n          multiple\r\n          search\r\n          selection\r\n          fluid\r\n          allowAdditions\r\n          value={currentTag}\r\n          onAddItem={(event, { value }) => {\r\n            setTags((prevState) => [{ text: value, value }, ...prevState]);\r\n          }}\r\n          onChange={(event, { value }) => {\r\n            setCurrentTag(value);\r\n          }}\r\n        />\r\n        {submitEditButton}\r\n        {deleteButton}\r\n        {completeIncompleteButton}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewItem;\r\n","/app/src/components/HomePage.js",[],"/app/src/redux/database.js",[],"/app/src/redux/NavigationBar.js",[],"/app/src/components/Authentication/Login.js",[],"/app/src/components/ToDoList.js",["112","113"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { XMasonry, XBlock } from \"react-xmasonry\";\r\nimport ToDoItem from \"./ToDoCard\";\r\nimport { getDatabase } from \"../api/API_CRUD\";\r\nimport \"./CSS/ToDoList.css\";\r\nimport LoadSpinner from \"./LoadSpinner\";\r\nimport { change_db } from \"../redux/database\";\r\nimport { store } from \"../redux/combineReducers\";\r\n\r\nconst ToDoList = ({ match }) => {\r\n  const activated = useSelector((state) => state.navigationState);\r\n  const currentDatabase = useSelector((state) => state.databaseState);\r\n  const currentTag = useSelector((state) => state.tagState);\r\n  const isSortingByUpdateDate = useSelector((state) => state.sortState);\r\n  const filterDueDateDaysBy = useSelector((state) => state.dueDateState);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    store.dispatch(change_db([]));\r\n    setLoading(true);\r\n    const databaseFn = async () => {\r\n      await getDatabase(match.path !== \"/incomplete\");\r\n      setLoading(false);\r\n    };\r\n    databaseFn();\r\n  }, [activated]);\r\n\r\n  const filterBasedOnTag = (jsonObject) => {\r\n    // If currentTag is not empty, then we will filter based on currentTag\r\n    if (currentTag.length > 0) {\r\n      if (jsonObject.tag_list.filter((e) => currentTag.indexOf(e) !== -1).length > 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      // If currentTag is empty, then no filter is applied\r\n      return true;\r\n    }\r\n  };\r\n  const filterBasedOnDueDate = (jsonObject) => {\r\n    if (!filterDueDateDaysBy) {\r\n      return true;\r\n    } else {\r\n      if (jsonObject.due_date) {\r\n        const today = new Date();\r\n        return today.setDate(today.getDate() + filterDueDateDaysBy) - new Date(jsonObject.due_date) >= 0;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Comparators\r\n  const sortBasedOnUpdate = (a, b) => {\r\n    return new Date(b.updated_at) - new Date(a.updated_at);\r\n  };\r\n  const sortBasedOnDueDate = (a, b) => {\r\n    if (a.due_date === b.due_date) {\r\n      return 0;\r\n    } else if (a.due_date === null) {\r\n      return 1;\r\n    } else if (b.due_date === null) {\r\n      return -1;\r\n    } else {\r\n      return new Date(a.due_date) - new Date(b.due_date);\r\n    }\r\n  };\r\n  // This has very high complexity, may bottleneck here.\r\n  const renderDatabase = currentDatabase\r\n    .filter((x) => filterBasedOnTag(x))\r\n    .filter((x) => filterBasedOnDueDate(x))\r\n    .sort((a, b) => (isSortingByUpdateDate ? sortBasedOnUpdate(a, b) : sortBasedOnDueDate(a, b)))\r\n    .map((jsonObject) => {\r\n      return (\r\n        <XBlock key={jsonObject.id}>\r\n          <div className=\"XMasonryCard\">\r\n            <ToDoItem item={jsonObject} />\r\n          </div>\r\n        </XBlock>\r\n      );\r\n    });\r\n\r\n  // If renderDatabase is loading, we'll need buffer some things first right\r\n  const displayDatabase = useCallback(() => {\r\n    return (\r\n      <XMasonry style={{ marginTop: \"5vh\" }} maxColumns={4}>\r\n        {renderDatabase}\r\n      </XMasonry>\r\n    );\r\n  }, [currentTag, renderDatabase]);\r\n\r\n  return loading ? <LoadSpinner text=\"Loading data..\" /> : displayDatabase();\r\n};\r\n\r\nexport default ToDoList;\r\n","/app/src/components/FilterBar.js",["114","115","116"],"/app/src/api/API_LINK.js",[],"/app/src/api/API_CRUD.js",[],"/app/src/components/ToDoCard.js",[],"/app/src/components/Authentication/AuthenticatedRoutes.js",[],"/app/src/api/API_AUTHEN.js",[],"/app/src/components/Authentication/NotFoundPage.js",[],"/app/src/components/WelcomePage.js",[],"/app/src/redux/userID.js",[],"/app/src/redux/userName.js",[],"/app/src/components/Authentication/NonAuthenticatedRoutes.js",[],"/app/src/components/ToDoCardContent.js",[],"/app/src/components/LoadSpinner.js",[],"/app/src/redux/sortType.js",[],"/app/src/redux/filterTag.js",[],"/app/src/redux/filterDueDate.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":60,"column":6,"nodeType":"123","endLine":60,"endColumn":18,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":27,"column":6,"nodeType":"123","endLine":27,"endColumn":17,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":91,"column":6,"nodeType":"123","endLine":91,"endColumn":34,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":14,"column":9,"nodeType":"131","messageId":"132","endLine":14,"endColumn":27},{"ruleId":"121","severity":1,"message":"133","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":23,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":52,"column":6,"nodeType":"123","endLine":52,"endColumn":13,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["140"],"React Hook useCallback has an unnecessary dependency: 'currentTag'. Either exclude it or remove the dependency array.",["141"],"no-unused-vars","'filterDueDateState' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'isCompleted'. Either include it or remove the dependency array.",["142"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [isNewItem, match.params.id, match.path]",{"range":"154","text":"155"},"Update the dependencies array to be: [activated, match.path]",{"range":"156","text":"157"},"Update the dependencies array to be: [renderDatabase]",{"range":"158","text":"159"},"Update the dependencies array to be: [currentDatabase, isCompleted]",{"range":"160","text":"161"},"Update the dependencies array to be: [dispatch, match]",{"range":"162","text":"163"},[2387,2399],"[isNewItem, match.params.id, match.path]",[1088,1099],"[activated, match.path]",[3057,3085],"[renderDatabase]",[1881,1898],"[currentDatabase, isCompleted]",[2015,2022],"[dispatch, match]"]