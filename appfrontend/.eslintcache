[{"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/index.tsx":"1","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/combineReducers.ts":"2","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/App.tsx":"3","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/database.ts":"4","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/NavigationBar.ts":"5","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/userID.ts":"6","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/sortType.ts":"7","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/filterDueDate.ts":"8","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/userName.ts":"9","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/filterTag.ts":"10","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/HomePage.tsx":"11","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/WelcomePage.tsx":"12","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/NewItem.tsx":"13","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/AuthenticatedRoutes.tsx":"14","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/NonAuthenticatedRoutes.tsx":"15","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/Login.tsx":"16","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/NotFoundPage.tsx":"17","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_LINK.ts":"18","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_CRUD.ts":"19","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_AUTHEN.ts":"20","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoList.tsx":"21","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/FilterBar.tsx":"22","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/WelcomePageWord.tsx":"23","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/LoadSpinner.tsx":"24","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/NavigationBar.tsx":"25","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoCard.tsx":"26","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoCardContent.tsx":"27","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/typings.ts":"28"},{"size":336,"mtime":1610954427741,"results":"29","hashOfConfig":"30"},{"size":811,"mtime":1610919659460,"results":"31","hashOfConfig":"30"},{"size":1517,"mtime":1611283672183,"results":"32","hashOfConfig":"30"},{"size":462,"mtime":1611240517700,"results":"33","hashOfConfig":"30"},{"size":637,"mtime":1611240499670,"results":"34","hashOfConfig":"30"},{"size":569,"mtime":1611240492850,"results":"35","hashOfConfig":"30"},{"size":668,"mtime":1611240496560,"results":"36","hashOfConfig":"30"},{"size":670,"mtime":1611240510560,"results":"37","hashOfConfig":"30"},{"size":587,"mtime":1611240493930,"results":"38","hashOfConfig":"30"},{"size":442,"mtime":1611240503570,"results":"39","hashOfConfig":"30"},{"size":254,"mtime":1611243407440,"results":"40","hashOfConfig":"30"},{"size":1805,"mtime":1610916738205,"results":"41","hashOfConfig":"30"},{"size":7287,"mtime":1611293283943,"results":"42","hashOfConfig":"30"},{"size":1195,"mtime":1611231955600,"results":"43","hashOfConfig":"30"},{"size":1016,"mtime":1611243164360,"results":"44","hashOfConfig":"30"},{"size":4880,"mtime":1611285215533,"results":"45","hashOfConfig":"30"},{"size":724,"mtime":1610961329350,"results":"46","hashOfConfig":"30"},{"size":520,"mtime":1610888831804,"results":"47","hashOfConfig":"30"},{"size":3270,"mtime":1611293377673,"results":"48","hashOfConfig":"30"},{"size":3049,"mtime":1610995921830,"results":"49","hashOfConfig":"30"},{"size":3844,"mtime":1611284487393,"results":"50","hashOfConfig":"30"},{"size":4205,"mtime":1611284419833,"results":"51","hashOfConfig":"30"},{"size":527,"mtime":1610916784037,"results":"52","hashOfConfig":"30"},{"size":328,"mtime":1610993962950,"results":"53","hashOfConfig":"30"},{"size":2316,"mtime":1610954782460,"results":"54","hashOfConfig":"30"},{"size":1451,"mtime":1611001860760,"results":"55","hashOfConfig":"30"},{"size":1287,"mtime":1611234128270,"results":"56","hashOfConfig":"30"},{"size":1864,"mtime":1611007671140,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1b0xvje",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/index.tsx",[],["117","118"],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/combineReducers.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/App.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/database.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/NavigationBar.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/userID.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/sortType.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/filterDueDate.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/userName.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/redux/filterTag.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/HomePage.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/WelcomePage.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/NewItem.tsx",["119","120","121"],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/AuthenticatedRoutes.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/NonAuthenticatedRoutes.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/Login.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/Authentication/NotFoundPage.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_LINK.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_CRUD.ts",["122"],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/api/API_AUTHEN.ts",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoList.tsx",["123","124"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { XMasonry, XBlock } from \"react-xmasonry\";\r\nimport ToDoCard from \"./ToDoCard\";\r\nimport { getDatabase } from \"../api/API_CRUD\";\r\nimport \"./CSS/ToDoList.css\";\r\nimport LoadSpinner from \"./LoadSpinner\";\r\nimport { change_db } from \"../redux/database\";\r\nimport { RootState, store } from \"../redux/combineReducers\";\r\nimport { completeItem } from \"../typings\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ToDoList = () => {\r\n  const activated = useSelector((state: RootState) => state.navigationState);\r\n  const currentDatabase = useSelector((state: RootState) => state.databaseState);\r\n  const currentTag = useSelector((state: RootState) => state.tagState);\r\n  const isSortingByUpdateDate = useSelector((state: RootState) => state.sortState);\r\n  const filterDueDateDaysBy = useSelector((state: RootState) => state.dueDateState);\r\n  const [loading, setLoading] = useState(true);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    store.dispatch(change_db([]));\r\n    setLoading(true);\r\n    const databaseFn = async () => {\r\n      await getDatabase(location.pathname !== \"/incomplete\");\r\n      setLoading(false);\r\n    };\r\n    databaseFn();\r\n  }, [activated]);\r\n\r\n  const filterBasedOnTag = (jsonObject: completeItem) => {\r\n    // If currentTag is not empty, then we will filter based on currentTag\r\n    if (currentTag.length > 0) {\r\n      if (jsonObject.tag_list.filter((e) => currentTag.indexOf(e) !== -1).length > 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      // If currentTag is empty, then no filter is applied\r\n      return true;\r\n    }\r\n  };\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  const filterBasedOnDueDate = (jsonObject: completeItem) => {\r\n    if (!filterDueDateDaysBy) {\r\n      return true;\r\n    } else {\r\n      if (jsonObject.due_date) {\r\n        const todayOffsetByFilter: Date = new Date();\r\n        todayOffsetByFilter.setDate(todayOffsetByFilter.getDate() + filterDueDateDaysBy); // Add days to date\r\n        const dateObj: Date = new Date(jsonObject.due_date);\r\n        return (todayOffsetByFilter.getTime() - dateObj.getTime()) / _MS_PER_DAY >= 0;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Comparators\r\n  const sortBasedOnUpdate = (a: completeItem, b: completeItem) => {\r\n    return new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime();\r\n  };\r\n  const sortBasedOnDueDate = (a: completeItem, b: completeItem) => {\r\n    if (a.due_date === b.due_date) {\r\n      return 0;\r\n    } else if (a.due_date === null) {\r\n      return 1;\r\n    } else if (b.due_date === null) {\r\n      return -1;\r\n    } else {\r\n      return new Date(a.due_date).getTime() - new Date(b.due_date).getTime();\r\n    }\r\n  };\r\n  // This has very high complexity, may bottleneck here.\r\n  const renderDatabase = currentDatabase\r\n    .filter((x: completeItem) => filterBasedOnTag(x))\r\n    .filter((x: completeItem) => filterBasedOnDueDate(x))\r\n    .sort((a: completeItem, b: completeItem) =>\r\n      isSortingByUpdateDate ? sortBasedOnUpdate(a, b) : sortBasedOnDueDate(a, b)\r\n    )\r\n    .map((jsonObject: completeItem) => {\r\n      return (\r\n        <XBlock key={jsonObject.id}>\r\n          <div className=\"XMasonryCard\">\r\n            <ToDoCard item={jsonObject} />\r\n          </div>\r\n        </XBlock>\r\n      );\r\n    });\r\n\r\n  // If renderDatabase is loading, we'll need buffer some things first right\r\n  const displayDatabase = useCallback(() => {\r\n    return (\r\n      //\r\n      //<XMasonry style={{ marginTop: \"5vh\" }} maxColumns={4}>\r\n      <XMasonry maxColumns={4}>{renderDatabase}</XMasonry>\r\n    );\r\n  }, [currentTag, renderDatabase]);\r\n\r\n  return loading ? <LoadSpinner text=\"Loading data..\" /> : displayDatabase();\r\n};\r\n\r\nexport default ToDoList;\r\n","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/FilterBar.tsx",["125","126"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTag } from \"../redux/filterTag\";\r\nimport { Dropdown, Container, Grid } from \"semantic-ui-react\";\r\nimport { sortByUpdateDate, sortByDueDate } from \"../redux/sortType\";\r\nimport { filterDueDate, resetFilterDueDate } from \"../redux/filterDueDate\";\r\nimport { RootState } from \"../redux/combineReducers\";\r\nimport { tagOptionsObjectInterface, sortOptionObjectInterface, completeItem } from \"../typings\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst FilterBar = () => {\r\n  const currentDatabase: completeItem[] = useSelector((state: RootState) => state.databaseState);\r\n\r\n  const filterOptions = [\r\n    { key: \"one\", text: \"Filter due in a day\", value: 1 },\r\n    { key: \"three\", text: \"Filter due in 3 days\", value: 3 },\r\n    { key: \"seven\", text: \"Filter due in a week\", value: 7 },\r\n  ];\r\n  const [tagOptions, setTagOptions] = useState<tagOptionsObjectInterface[]>([]); // Tags require 2 states\r\n  const currentTag = useSelector((state: RootState) => state.tagState);\r\n\r\n  const sortOptions = [\r\n    // isSortByUpdate -> true or false?\r\n    { key: \"SORTBYDUEDATE\", text: \"Sort by due date\", value: false },\r\n    { key: \"SORTBYUPDATE\", text: \"Sort by update date\", value: true },\r\n  ];\r\n  // This state is solely for animating. I didn't want redux to take in the whole object value returned by Semantic\r\n  const [DropdownSortText, setDropdownSortText] = useState<sortOptionObjectInterface>(sortOptions[0]);\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const isCompleted = useCallback(() => location.pathname === \"/completed\", [location]);\r\n\r\n  useEffect(() => {\r\n    // Parse through the available tags, and display them as options\r\n    const refreshFilterBar = () => {\r\n      // Unique tagsList\r\n      const tagsList = [\r\n        ...new Set<string>(\r\n          currentDatabase\r\n            .filter(\r\n              (jsonObject: completeItem) => jsonObject.completed === isCompleted() && jsonObject.tag_list.length > 0\r\n            )\r\n            .map((jsonObject: completeItem) => jsonObject.tag_list)\r\n            .flat()\r\n        ),\r\n      ];\r\n      setTagOptions(\r\n        tagsList.map((tag) => {\r\n          const newObj: tagOptionsObjectInterface = { key: tag, text: tag, value: tag };\r\n          return newObj;\r\n        })\r\n      );\r\n    };\r\n    refreshFilterBar();\r\n  }, [currentDatabase]);\r\n\r\n  // Reset the dropdown animiations and states when changing to a new page.\r\n  useEffect(() => {\r\n    dispatch(addTag([]));\r\n    dispatch(resetFilterDueDate());\r\n    dispatch(sortByDueDate()); // Sort state\r\n    setDropdownSortText(sortOptions[0]); // Sort animation\r\n  }, [location]);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid columns={3} stackable>\r\n        <Grid.Column>\r\n          <Dropdown\r\n            fluid\r\n            selection\r\n            options={sortOptions}\r\n            value={DropdownSortText.value} // Im not sure how this works.\r\n            onChange={(event, { value }) => {\r\n              setDropdownSortText({ key: value as string, value: value as boolean, text: value as string });\r\n              value ? dispatch(sortByUpdateDate()) : dispatch(sortByDueDate());\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Dropdown\r\n            placeholder=\"Filter by Tags\"\r\n            clearable\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={tagOptions}\r\n            value={currentTag}\r\n            onChange={(event, { value }) => {\r\n              console.log(value);\r\n              dispatch(addTag(value as string[]));\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Dropdown\r\n            placeholder=\"Filter by due date\"\r\n            fluid\r\n            selection\r\n            clearable\r\n            options={filterOptions}\r\n            onChange={(event, { value }) => {\r\n              value ? dispatch(filterDueDate(value as number)) : dispatch(resetFilterDueDate());\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/WelcomePageWord.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/LoadSpinner.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/NavigationBar.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoCard.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/components/ToDoCardContent.tsx",[],"/home/fergusmok/CVWO/clone2/ToDoApp/appfrontend/src/typings.ts",["127","128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":7,"column":35,"nodeType":"136","messageId":"137","endLine":7,"endColumn":44},{"ruleId":"134","severity":1,"message":"138","line":7,"column":46,"nodeType":"136","messageId":"137","endLine":7,"endColumn":59},{"ruleId":"139","severity":1,"message":"140","line":85,"column":6,"nodeType":"141","endLine":85,"endColumn":25,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"143","line":6,"column":43,"nodeType":"136","messageId":"137","endLine":6,"endColumn":53},{"ruleId":"139","severity":1,"message":"144","line":30,"column":6,"nodeType":"141","endLine":30,"endColumn":17,"suggestions":"145"},{"ruleId":"139","severity":1,"message":"146","line":99,"column":6,"nodeType":"141","endLine":99,"endColumn":34,"suggestions":"147"},{"ruleId":"139","severity":1,"message":"148","line":56,"column":6,"nodeType":"141","endLine":56,"endColumn":23,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":64,"column":6,"nodeType":"141","endLine":64,"endColumn":16,"suggestions":"151"},{"ruleId":"134","severity":1,"message":"152","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":17},{"ruleId":"134","severity":1,"message":"153","line":2,"column":19,"nodeType":"136","messageId":"137","endLine":2,"endColumn":32},{"ruleId":"134","severity":1,"message":"154","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":19},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'itemID'. Either include them or remove the dependency array.","ArrayExpression",["157"],"'MatchProps' is defined but never used.","React Hook useEffect has a missing dependency: 'location.pathname'. Either include it or remove the dependency array.",["158"],"React Hook useCallback has an unnecessary dependency: 'currentTag'. Either exclude it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'isCompleted'. Either include it or remove the dependency array.",["160"],"React Hook useEffect has missing dependencies: 'dispatch' and 'sortOptions'. Either include them or remove the dependency array.",["161"],"'History' is defined but never used.","'LocationState' is defined but never used.","'FormEvent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [isNewItem, itemID, location.pathname]",{"range":"172","text":"173"},"Update the dependencies array to be: [activated, location.pathname]",{"range":"174","text":"175"},"Update the dependencies array to be: [renderDatabase]",{"range":"176","text":"177"},"Update the dependencies array to be: [currentDatabase, isCompleted]",{"range":"178","text":"179"},"Update the dependencies array to be: [dispatch, location, sortOptions]",{"range":"180","text":"181"},[3888,3907],"[isNewItem, itemID, location.pathname]",[1280,1291],"[activated, location.pathname]",[3699,3727],"[renderDatabase]",[2448,2465],"[currentDatabase, isCompleted]",[2744,2754],"[dispatch, location, sortOptions]"]