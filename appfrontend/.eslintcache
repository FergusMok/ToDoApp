[{"/app/src/index.js":"1","/app/src/components/App.js":"2","/app/src/redux/combineReducers.js":"3","/app/src/components/NavigationBar.js":"4","/app/src/components/NewItem.js":"5","/app/src/components/HomePage.js":"6","/app/src/redux/database.js":"7","/app/src/redux/NavigationBar.js":"8","/app/src/components/Authentication/Login.js":"9","/app/src/components/ToDoList.js":"10","/app/src/components/FilterBar.js":"11","/app/src/api/API_LINK.js":"12","/app/src/api/API_CRUD.js":"13","/app/src/components/ToDoCard.js":"14","/app/src/components/Authentication/AuthenticatedRoutes.js":"15","/app/src/api/API_AUTHEN.js":"16","/app/src/components/Authentication/NotFoundPage.js":"17","/app/src/components/WelcomePage.js":"18","/app/src/redux/userID.js":"19","/app/src/redux/userName.js":"20","/app/src/components/Authentication/NonAuthenticatedRoutes.js":"21","/app/src/components/ToDoCardContent.js":"22","/app/src/components/LoadSpinner.js":"23","/app/src/redux/sortType.js":"24","/app/src/redux/filterTag.js":"25","/app/src/redux/filterDueDate.js":"26","/app/src/components/Testing.js":"27","/app/src/api/API_TESTING.js":"28","/app/src/components/Email.js":"29"},{"size":336,"mtime":1609869024520,"results":"30","hashOfConfig":"31"},{"size":1716,"mtime":1610531888870,"results":"32","hashOfConfig":"31"},{"size":698,"mtime":1610430301820,"results":"33","hashOfConfig":"31"},{"size":2359,"mtime":1610517734410,"results":"34","hashOfConfig":"31"},{"size":5974,"mtime":1610535364670,"results":"35","hashOfConfig":"31"},{"size":319,"mtime":1610434284700,"results":"36","hashOfConfig":"31"},{"size":321,"mtime":1609869079760,"results":"37","hashOfConfig":"31"},{"size":559,"mtime":1609869082930,"results":"38","hashOfConfig":"31"},{"size":3044,"mtime":1610434507620,"results":"39","hashOfConfig":"31"},{"size":3202,"mtime":1610434636570,"results":"40","hashOfConfig":"31"},{"size":3291,"mtime":1610464909570,"results":"41","hashOfConfig":"31"},{"size":520,"mtime":1610530415510,"results":"42","hashOfConfig":"31"},{"size":2539,"mtime":1610434425090,"results":"43","hashOfConfig":"31"},{"size":1415,"mtime":1610517727350,"results":"44","hashOfConfig":"31"},{"size":1035,"mtime":1610470780880,"results":"45","hashOfConfig":"31"},{"size":2654,"mtime":1610438464210,"results":"46","hashOfConfig":"31"},{"size":712,"mtime":1610530358170,"results":"47","hashOfConfig":"31"},{"size":1584,"mtime":1610518167880,"results":"48","hashOfConfig":"31"},{"size":448,"mtime":1610367157390,"results":"49","hashOfConfig":"31"},{"size":452,"mtime":1610357468150,"results":"50","hashOfConfig":"31"},{"size":881,"mtime":1610471286970,"results":"51","hashOfConfig":"31"},{"size":1156,"mtime":1610434332490,"results":"52","hashOfConfig":"31"},{"size":258,"mtime":1610434378390,"results":"53","hashOfConfig":"31"},{"size":528,"mtime":1610434641920,"results":"54","hashOfConfig":"31"},{"size":364,"mtime":1610430145212,"results":"55","hashOfConfig":"31"},{"size":545,"mtime":1610432716190,"results":"56","hashOfConfig":"31"},{"size":269,"mtime":1610530409570,"results":"57","hashOfConfig":"31"},{"size":358,"mtime":1610530504740,"results":"58","hashOfConfig":"31"},{"size":198,"mtime":1610531961430,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"19yot3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["121","122"],"/app/src/components/App.js",[],"/app/src/redux/combineReducers.js",[],"/app/src/components/NavigationBar.js",[],"/app/src/components/NewItem.js",["123"],"/app/src/components/HomePage.js",[],"/app/src/redux/database.js",[],"/app/src/redux/NavigationBar.js",[],"/app/src/components/Authentication/Login.js",[],"/app/src/components/ToDoList.js",["124","125"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { XMasonry, XBlock } from \"react-xmasonry\";\r\nimport ToDoItem from \"./ToDoCard\";\r\nimport { getDatabase } from \"../api/API_CRUD\";\r\nimport \"./CSS/ToDoList.css\";\r\nimport LoadSpinner from \"./LoadSpinner\";\r\nimport { change_db } from \"../redux/database\";\r\nimport { store } from \"../redux/combineReducers\";\r\n\r\nconst ToDoList = ({ match }) => {\r\n  const activated = useSelector((state) => state.navigationState);\r\n  const currentDatabase = useSelector((state) => state.databaseState);\r\n  const currentTag = useSelector((state) => state.tagState);\r\n  const isSortingByUpdateDate = useSelector((state) => state.sortState);\r\n  const filterDueDateDaysBy = useSelector((state) => state.dueDateState);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    store.dispatch(change_db([]));\r\n    setLoading(true);\r\n    const databaseFn = async () => {\r\n      await getDatabase(match.path !== \"/incomplete\");\r\n      setLoading(false);\r\n    };\r\n    databaseFn();\r\n  }, [activated]);\r\n\r\n  const filterBasedOnTag = (jsonObject) => {\r\n    // If currentTag is not empty, then we will filter based on currentTag\r\n    if (currentTag.length > 0) {\r\n      if (jsonObject.tag_list.filter((e) => currentTag.indexOf(e) !== -1).length > 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      // If currentTag is empty, then no filter is applied\r\n      return true;\r\n    }\r\n  };\r\n  const filterBasedOnDueDate = (jsonObject) => {\r\n    if (!filterDueDateDaysBy) {\r\n      return true;\r\n    } else {\r\n      if (jsonObject.due_date) {\r\n        const today = new Date();\r\n        return today.setDate(today.getDate() + filterDueDateDaysBy) - new Date(jsonObject.due_date) >= 0;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Comparators\r\n  const sortBasedOnUpdate = (a, b) => {\r\n    return new Date(b.updated_at) - new Date(a.updated_at);\r\n  };\r\n  const sortBasedOnDueDate = (a, b) => {\r\n    if (a.due_date === b.due_date) {\r\n      return 0;\r\n    } else if (a.due_date === null) {\r\n      return 1;\r\n    } else if (b.due_date === null) {\r\n      return -1;\r\n    } else {\r\n      return new Date(a.due_date) - new Date(b.due_date);\r\n    }\r\n  };\r\n  // This has very high complexity, may bottleneck here.\r\n  const renderDatabase = currentDatabase\r\n    .filter((x) => filterBasedOnTag(x))\r\n    .filter((x) => filterBasedOnDueDate(x))\r\n    .sort((a, b) => (isSortingByUpdateDate ? sortBasedOnUpdate(a, b) : sortBasedOnDueDate(a, b)))\r\n    .map((jsonObject) => {\r\n      return (\r\n        <XBlock key={jsonObject.id}>\r\n          <div className=\"XMasonryCard\">\r\n            <ToDoItem item={jsonObject} />\r\n          </div>\r\n        </XBlock>\r\n      );\r\n    });\r\n\r\n  // If renderDatabase is loading, we'll need buffer some things first right\r\n  const displayDatabase = useCallback(() => {\r\n    return (\r\n      <XMasonry style={{ marginTop: \"5vh\" }} maxColumns={4}>\r\n        {renderDatabase}\r\n      </XMasonry>\r\n    );\r\n  }, [currentTag, renderDatabase]);\r\n\r\n  return loading ? <LoadSpinner text=\"Loading data..\" /> : displayDatabase();\r\n};\r\n\r\nexport default ToDoList;\r\n","/app/src/components/FilterBar.js",["126","127","128"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTag } from \"../redux/filterTag\";\r\nimport { Dropdown, Container, Grid } from \"semantic-ui-react\";\r\nimport { sortByUpdateDate, sortByDueDate } from \"../redux/sortType\";\r\nimport { filterDueDate, resetFilterDueDate } from \"../redux/filterDueDate\";\r\n\r\nconst FilterBar = ({ match }) => {\r\n  const currentDatabase = useSelector((state) => state.databaseState);\r\n\r\n  const [tagOptions, setTagOptions] = useState([]); // Tags require 2 states\r\n  const currentTag = useSelector((state) => state.tagState);\r\n\r\n  const filterDueDateState = useSelector((state) => state.dueDateState); // Default is an empty string.\r\n  const filterOptions = [\r\n    { key: \"one\", text: \"Filter due in a day\", value: 1 },\r\n    { key: \"three\", text: \"Filter due in 3 days\", value: 3 },\r\n    { key: \"seven\", text: \"Filter due in a week\", value: 7 },\r\n  ];\r\n\r\n  const sortOptions = [\r\n    { key: \"SORTBYDUEDATE\", text: \"Sort by due date\", value: false },\r\n    { key: \"SORTBYUPDATE\", text: \"Sort by update date\", value: true },\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  const isCompleted = useCallback(() => match.path === \"/completed\", [match]);\r\n\r\n  useEffect(() => {\r\n    // Parse through the available tags, and display them as options\r\n    const refreshFilterBar = () => {\r\n      // Unique tagsList\r\n      const tagsList = [\r\n        ...new Set(\r\n          currentDatabase\r\n            .filter((jsonObject) => jsonObject.completed === isCompleted() && jsonObject.tag_list.length > 0)\r\n            .map((jsonObject) => jsonObject.tag_list)\r\n        ),\r\n      ];\r\n      setTagOptions(\r\n        tagsList.flat().map((tag) => {\r\n          const newObj = { key: tag, text: tag, value: tag };\r\n          return newObj;\r\n        })\r\n      );\r\n    };\r\n    refreshFilterBar();\r\n  }, [currentDatabase]);\r\n\r\n  useEffect(() => {\r\n    dispatch(addTag([])); // Reset the dropdown animation when change to a new page\r\n  }, [match]);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid columns={3} stackable>\r\n        <Grid.Column>\r\n          <Dropdown\r\n            placeholder=\"Sort based on\"\r\n            fluid\r\n            selection\r\n            options={sortOptions}\r\n            //defaultValue=\"Sort by due date\" This thing is not working\r\n            onChange={(event, { value }) => (value ? dispatch(sortByUpdateDate()) : dispatch(sortByDueDate()))}\r\n          />\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Dropdown\r\n            placeholder=\"Filter by Tags\"\r\n            fluid\r\n            multiple\r\n            selection\r\n            options={tagOptions}\r\n            value={currentTag}\r\n            onChange={(event, { value }) => {\r\n              dispatch(addTag(value));\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column>\r\n          <Dropdown\r\n            placeholder=\"Filter by due date\"\r\n            fluid\r\n            selection\r\n            clearable\r\n            options={filterOptions}\r\n            onChange={(event, { value }) => {\r\n              value ? dispatch(filterDueDate(value)) : dispatch(resetFilterDueDate());\r\n            }}\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilterBar;\r\n","/app/src/api/API_LINK.js",[],"/app/src/api/API_CRUD.js",[],"/app/src/components/ToDoCard.js",[],"/app/src/components/Authentication/AuthenticatedRoutes.js",[],"/app/src/api/API_AUTHEN.js",[],"/app/src/components/Authentication/NotFoundPage.js",["129"],"/app/src/components/WelcomePage.js",[],"/app/src/redux/userID.js",[],"/app/src/redux/userName.js",[],"/app/src/components/Authentication/NonAuthenticatedRoutes.js",[],"/app/src/components/ToDoCardContent.js",[],"/app/src/components/LoadSpinner.js",[],"/app/src/redux/sortType.js",[],"/app/src/redux/filterTag.js",[],"/app/src/redux/filterDueDate.js",[],"/app/src/components/Testing.js",[],"/app/src/api/API_TESTING.js",[],"/app/src/components/Email.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":71,"column":6,"nodeType":"136","endLine":71,"endColumn":18,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":27,"column":6,"nodeType":"136","endLine":27,"endColumn":17,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"140","line":91,"column":6,"nodeType":"136","endLine":91,"endColumn":34,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":14,"column":9,"nodeType":"144","messageId":"145","endLine":14,"endColumn":27},{"ruleId":"134","severity":1,"message":"146","line":48,"column":6,"nodeType":"136","endLine":48,"endColumn":23,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":52,"column":6,"nodeType":"136","endLine":52,"endColumn":13,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"150","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":19},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["154"],"React Hook useCallback has an unnecessary dependency: 'currentTag'. Either exclude it or remove the dependency array.",["155"],"no-unused-vars","'filterDueDateState' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'isCompleted'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["157"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [isNewItem, match.params.id, match.path]",{"range":"168","text":"169"},"Update the dependencies array to be: [activated, match.path]",{"range":"170","text":"171"},"Update the dependencies array to be: [renderDatabase]",{"range":"172","text":"173"},"Update the dependencies array to be: [currentDatabase, isCompleted]",{"range":"174","text":"175"},"Update the dependencies array to be: [dispatch, match]",{"range":"176","text":"177"},[2736,2748],"[isNewItem, match.params.id, match.path]",[1088,1099],"[activated, match.path]",[3057,3085],"[renderDatabase]",[1881,1898],"[currentDatabase, isCompleted]",[2015,2022],"[dispatch, match]"]