[{"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoCard.js":"1","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/index.js":"2","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/combineReducers.js":"3","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/App.js":"4","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/database.js":"5","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/NavigationBar.js":"6","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/HomePage.js":"7","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NewItem.js":"8","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NavigationBar.js":"9","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoList.js":"10","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_LINK.js":"11","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoItem.js":"12","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/Sidebar.js":"13","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/tagFilter.js":"14","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_CRUD.js":"15"},{"size":857,"mtime":1609306977491,"results":"16","hashOfConfig":"17"},{"size":326,"mtime":1608639504722,"results":"18","hashOfConfig":"17"},{"size":357,"mtime":1609254617841,"results":"19","hashOfConfig":"17"},{"size":885,"mtime":1609301064440,"results":"20","hashOfConfig":"17"},{"size":351,"mtime":1609301184077,"results":"21","hashOfConfig":"17"},{"size":332,"mtime":1608887098083,"results":"22","hashOfConfig":"17"},{"size":445,"mtime":1609298510628,"results":"23","hashOfConfig":"17"},{"size":4109,"mtime":1609310639952,"results":"24","hashOfConfig":"17"},{"size":1828,"mtime":1609310052021,"results":"25","hashOfConfig":"17"},{"size":1230,"mtime":1609301140223,"results":"26","hashOfConfig":"17"},{"size":163,"mtime":1609309687942,"results":"27","hashOfConfig":"17"},{"size":1373,"mtime":1609310195420,"results":"28","hashOfConfig":"17"},{"size":543,"mtime":1609254735227,"results":"29","hashOfConfig":"17"},{"size":543,"mtime":1609256772177,"results":"30","hashOfConfig":"17"},{"size":2329,"mtime":1609313690653,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"uquolz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoCard.js",["66","67","68"],"import React from \"react\"\nimport { Card, Label } from 'semantic-ui-react'\nimport {addTag, removeTag, tagReducer} from \"../redux/tagFilter\"\nimport './ToDoCard.css'\nimport { useSelector } from \"react-redux\";\nconst ToDoCard = ({item}) => {\n\n    const tags = item.tag_list.map( tag => <Label onClick = {() => addTag(tag)} key={tag}>{tag}</Label>)\n\n    return (\n      <>\n      <Card>\n        <Card.Content header = {item.title} style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}} className = \"CardHeader\"/>\n        <Card.Content meta = {`Updated: ${new Date(item.updated_at).toString().substr(4,17) } `} className = \"CardMeta\"/>\n        <Card.Content description ={item.body} style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}} />\n        <Card.Content extra> {tags} </Card.Content>\n    </Card>\n       </>)\n    }\n\n\n    \n\nexport default ToDoCard",["69","70"],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/index.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/combineReducers.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/App.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/database.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/NavigationBar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/HomePage.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NewItem.js",["71"],"import React, {useState, useEffect} from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport API_LINK from \"../api/API_LINK\"\r\nimport \"./NewItem.css\"\r\nimport {markCompletion, deleteEntry, onFormEdit, onFormSubmit} from \"../api/API_CRUD\"\r\n\r\n\r\nconst NewItem = ({match}) => {\r\n\r\n    // Title and body can be converted 1 state, but flattened so as to prevent double re-rendering.     \r\n    const [titleState, setTitle] = useState(\"\")  \r\n    const [bodyState, setBody] = useState(\"\")\r\n\r\n    // The tagInputBar requires 2 states to work. \r\n    const [tagState, setTags] = useState([]);\r\n    const [currentTag, setCurrentTag] = useState([])\r\n\r\n\r\n    const isNewItem = () => (match.path === \"/create\")\r\n    const isCompleted = () => (match.path === \"/completed/:id\")\r\n\r\n    useEffect( () => { // Fills up the form for put request.\r\n        const refreshArticle = async () => {\r\n            if (!isNewItem()) {\r\n                const itemDetails = await axios.get(`${API_LINK}/${match.params.id}`)\r\n                setTitle(itemDetails.data.data.title)\r\n                setBody(itemDetails.data.data.body)\r\n                // Parse the tags, and set them to the tagState\r\n                setTags( itemDetails.data.data.tag_list.map( tag => { \r\n                    const newObj = {key: tag, text: tag, value: tag} \r\n                    return newObj\r\n                }))\r\n                setCurrentTag( itemDetails.data.data.tag_list )\r\n            } else { // Resets state, if user changes from edit to create via navBar.\r\n                setTitle(\"\")\r\n                setBody(\"\")\r\n                setTags(\"\")\r\n            }\r\n        }\r\n        refreshArticle()}, [match.path])\r\n\r\n    \r\n    // Conditional rendering of the buttons\r\n    const submitEditButton = <button type=\"submit\">{isNewItem() ? 'Submit': \"Edit\"}</button>\r\n    const deleteButton = isNewItem() ? <></> : <button onClick = {() => deleteEntry(match.params.id, match)}> {\"Delete\"} </button>\r\n    // Double ternary\r\n    const completeIncompleteButton = isNewItem() ? <></> : \r\n        (isCompleted()) ?\r\n        <button onClick = {() => markCompletion(match.params.id, true)}>{\"Mark as Incomplete\"}</button> :\r\n        <button onClick = {() => markCompletion(match.params.id, false)}>{\"Mark as Complete\"}</button>\r\n\r\n    return (<div className = \"NewItemBody\">\r\n                <form onSubmit = { (event) => isNewItem()? onFormSubmit(event, titleState, bodyState, currentTag.toString(), match) : \r\n                    onFormEdit(event, match.params.id, titleState, bodyState, currentTag.toString(), match) }>\r\n\r\n            <h1> {isNewItem()? 'Create new item!': \"Edit item!\"} </h1>\r\n            <label>\r\n                Title:\r\n                <input\r\n                    value = {titleState}\r\n                    onInput = {(e) => setTitle(e.target.value)}\r\n                    required\r\n                    minLength = '3'\r\n                    maxLength = '27'\r\n                    placeholder = \"Item Title, e.g Go surfing at 6pm\" />\r\n            </label>\r\n            <label>\r\n                Body:\r\n                <textarea\r\n                    value = {bodyState}\r\n                    onInput = {(e) => setBody(e.target.value)}\r\n                    required\r\n                    minLength = '5'\r\n                    maxLength = '300'\r\n                    placeholder = \"Item Body, e.g Remember to book tickets to Hawaii\" />\r\n            </label>\r\n            <Dropdown\r\n                    options={tagState}\r\n                    placeholder=\"Tags!\"\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    fluid\r\n                    allowAdditions\r\n                    value={currentTag}\r\n                    onAddItem={(event, {value}) => { setTags(prevState => [{text: value, value}, ...prevState])}}\r\n                    onChange={(event, {value}) => { setCurrentTag(value)}}\r\n            />\r\n            {submitEditButton}  \r\n            {deleteButton}\r\n            {completeIncompleteButton}\r\n        </form>\r\n    </div>)\r\n}\r\n\r\nexport default NewItem","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NavigationBar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoList.js",["72"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { XMasonry, XBlock } from \"react-xmasonry\"\r\n\r\nimport ToDoItem from \"./ToDoItem\"\r\nimport {getDatabase} from \"../api/API_CRUD\"\r\nimport './ToDoList.css'\r\n\r\nconst ToDoList = ({match}) => {\r\n    const activated = useSelector(state => state.navigationState)\r\n    const currentDatabase = useSelector(state => state.databaseState)\r\n\r\n    useEffect( () => getDatabase(match.path !== \"/incomplete\") ,[activated] )\r\n    \r\n    // This has very high complexity, may bottleneck here.\r\n    const renderDatabase = currentDatabase.sort( (a,b) => new Date(b.updated_at) - new Date(a.updated_at)).map( \r\n        jsonObject => {\r\n            // Pathname prop\r\n            const pathName = jsonObject.completed ? `/completed/${jsonObject.id}` : `/incomplete/${jsonObject.id}`\r\n            return (    \r\n             <XBlock key = {jsonObject.id} >\r\n               <div className = \"XMasonryCard\">\r\n                        <ToDoItem item = {jsonObject} path = {pathName} />\r\n                </div>\r\n             </XBlock>\r\n        )})\r\n    return (<XMasonry maxColumns = {4}>\r\n            {renderDatabase} \r\n            </XMasonry>)\r\n}\r\n\r\nexport default ToDoList","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_LINK.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoItem.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/Sidebar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/tagFilter.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_CRUD.js",["73"],{"ruleId":"74","severity":1,"message":"75","line":3,"column":17,"nodeType":"76","messageId":"77","endLine":3,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":3,"column":28,"nodeType":"76","messageId":"77","endLine":3,"endColumn":38},{"ruleId":"74","severity":1,"message":"79","line":5,"column":10,"nodeType":"76","messageId":"77","endLine":5,"endColumn":21},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":41,"column":28,"nodeType":"86","endLine":41,"endColumn":40,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":13,"column":65,"nodeType":"86","endLine":13,"endColumn":76,"suggestions":"89"},{"ruleId":"74","severity":1,"message":"90","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":13},"no-unused-vars","'removeTag' is defined but never used.","Identifier","unusedVar","'tagReducer' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["94"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [isNewItem, match.params.id, match.path]",{"range":"99","text":"100"},"Update the dependencies array to be: [activated, match.path]",{"range":"101","text":"102"},[1691,1703],"[isNewItem, match.params.id, match.path]",[480,491],"[activated, match.path]"]