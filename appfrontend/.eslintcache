[{"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoCard.js":"1","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/index.js":"2","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/combineReducers.js":"3","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/App.js":"4","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/database.js":"5","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/NavigationBar.js":"6","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/HomePage.js":"7","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NewItem.js":"8","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NavigationBar.js":"9","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoList.js":"10","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_LINK.js":"11","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoItem.js":"12","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/Sidebar.js":"13","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/tagFilter.js":"14","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_CRUD.js":"15"},{"size":857,"mtime":1609306977491,"results":"16","hashOfConfig":"17"},{"size":326,"mtime":1608639504722,"results":"18","hashOfConfig":"17"},{"size":357,"mtime":1609254617841,"results":"19","hashOfConfig":"17"},{"size":885,"mtime":1609301064440,"results":"20","hashOfConfig":"17"},{"size":351,"mtime":1609301184077,"results":"21","hashOfConfig":"17"},{"size":332,"mtime":1608887098083,"results":"22","hashOfConfig":"17"},{"size":445,"mtime":1609298510628,"results":"23","hashOfConfig":"17"},{"size":4109,"mtime":1609310472500,"results":"24","hashOfConfig":"17"},{"size":1828,"mtime":1609310052021,"results":"25","hashOfConfig":"17"},{"size":1230,"mtime":1609301140223,"results":"26","hashOfConfig":"17"},{"size":163,"mtime":1609309687942,"results":"27","hashOfConfig":"17"},{"size":1373,"mtime":1609310195420,"results":"28","hashOfConfig":"17"},{"size":543,"mtime":1609254735227,"results":"29","hashOfConfig":"17"},{"size":543,"mtime":1609256772177,"results":"30","hashOfConfig":"17"},{"size":2423,"mtime":1609307605751,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"uquolz",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"35"},"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoCard.js",["66","67","68"],"import React from \"react\"\nimport { Card, Label } from 'semantic-ui-react'\nimport {addTag, removeTag, tagReducer} from \"../redux/tagFilter\"\nimport './ToDoCard.css'\nimport { useSelector } from \"react-redux\";\nconst ToDoCard = ({item}) => {\n\n    const tags = item.tag_list.map( tag => <Label onClick = {() => addTag(tag)} key={tag}>{tag}</Label>)\n\n    return (\n      <>\n      <Card>\n        <Card.Content header = {item.title} style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}} className = \"CardHeader\"/>\n        <Card.Content meta = {`Updated: ${new Date(item.updated_at).toString().substr(4,17) } `} className = \"CardMeta\"/>\n        <Card.Content description ={item.body} style={{whiteSpace: 'pre-wrap', overflowWrap: 'break-word'}} />\n        <Card.Content extra> {tags} </Card.Content>\n    </Card>\n       </>)\n    }\n\n\n    \n\nexport default ToDoCard",["69","70"],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/index.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/combineReducers.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/App.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/database.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/NavigationBar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/HomePage.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NewItem.js",["71"],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/NavigationBar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoList.js",["72"],"import React, {useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { XMasonry, XBlock } from \"react-xmasonry\"\r\n\r\nimport ToDoItem from \"./ToDoItem\"\r\nimport {getDatabase} from \"../api/API_CRUD\"\r\nimport './ToDoList.css'\r\n\r\nconst ToDoList = ({match}) => {\r\n    const activated = useSelector(state => state.navigationState)\r\n    const currentDatabase = useSelector(state => state.databaseState)\r\n\r\n    useEffect( () => getDatabase(match.path !== \"/incomplete\") ,[activated] )\r\n    \r\n    // This has very high complexity, may bottleneck here.\r\n    const renderDatabase = currentDatabase.sort( (a,b) => new Date(b.updated_at) - new Date(a.updated_at)).map( \r\n        jsonObject => {\r\n            // Pathname prop\r\n            const pathName = jsonObject.completed ? `/completed/${jsonObject.id}` : `/incomplete/${jsonObject.id}`\r\n            return (    \r\n             <XBlock key = {jsonObject.id} >\r\n               <div className = \"XMasonryCard\">\r\n                        <ToDoItem item = {jsonObject} path = {pathName} />\r\n                </div>\r\n             </XBlock>\r\n        )})\r\n    return (<XMasonry maxColumns = {4}>\r\n            {renderDatabase} \r\n            </XMasonry>)\r\n}\r\n\r\nexport default ToDoList","/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_LINK.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/ToDoItem.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/components/Sidebar.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/redux/tagFilter.js",[],"/mnt/c/Users/Fergu/documents/cvwo/app/appfrontend/src/api/API_CRUD.js",["73","74","75"],"import React from 'react'\nimport API_LINK from \"./API_LINK\"\nimport axios from \"axios\"\nimport {change_db} from '../redux/database'\nimport {store} from '../redux/combineReducers'\nimport { navigate }  from \"../redux/NavigationBar\"\nimport { useSelector } from 'react-redux'\n\n\n// Get completed or incompleted\nconst getDatabase = async (isCompleted) => {\n    const database = await axios.get(API_LINK + \".json\")\n    store.dispatch(change_db(database.data.data.filter(item => item.completed === isCompleted)))\n}\n \nconst markCompletion = async (id, isCompleted) => { // Put request to mark complete\n    await axios.put(`${API_LINK}/${id}`, {\n        completed: !isCompleted ,\n    }).then(resp => {\n        console.log(resp)\n    }).catch(resp => console.log(resp))\n        getDatabase(isCompleted)\n}\n\nconst redirect = (match) => { // Redirect once CRUD operaton is done. \n    const isNewItem = (match.path === \"/create\")\n    const isCompleted = (match.path === \"/completed/:id\")\n    if (isCompleted) { // Complete will route back to complete\n        window.location.href = \"/completed\"\n    } else { // Create and Incomplete should route back to incomplete \n        console.log(isNewItem, isCompleted, match.path)\n/*         if (isNewItem) {\n            console.log(\"Redirect and change the nav bar\")\n            store.dispatch(navigate(\"Incomplete\"))\n        }\n */        window.location.href = \"/incomplete\"\n    }\n}\n\nconst deleteEntry = async (id) => { // Destroy\n    await axios.delete(`${API_LINK}/${id}`)\n}\n\n// Completed defaulted to be false \nconst onFormSubmit = async (event, title, body, tag_list, match) => {\n    event.preventDefault();\n    await axios.post(API_LINK, {\n        title,\n        body,\n        tag_list\n    }).then(resp => {\n        console.log(resp)\n    }).catch(resp => console.log(resp))\n     redirect(match)\n}\n\nconst onFormEdit = async (event, id, title, body, tag_list, match) => {\n    console.log(\"Edit called\")\n    event.preventDefault();\n    console.log(tag_list)\n    await axios.put(`${API_LINK}/${id}`, {\n        // ES15 syntax\n        title,\n        body,\n        tag_list\n    }).then(resp => {\n        console.log(resp)\n    }).catch(error => {\n        if (error.response) {\n            console.log(\"Data\",error.response.data);\n        } else {\n            console.log(\"Error\",error)\n        }\n    })\n    redirect(match)\n}\n\nexport {getDatabase, markCompletion, deleteEntry, onFormEdit, onFormSubmit}",{"ruleId":"76","severity":1,"message":"77","line":3,"column":17,"nodeType":"78","messageId":"79","endLine":3,"endColumn":26},{"ruleId":"76","severity":1,"message":"80","line":3,"column":28,"nodeType":"78","messageId":"79","endLine":3,"endColumn":38},{"ruleId":"76","severity":1,"message":"81","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":21},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":41,"column":28,"nodeType":"88","endLine":41,"endColumn":40,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":13,"column":65,"nodeType":"88","endLine":13,"endColumn":76,"suggestions":"91"},{"ruleId":"76","severity":1,"message":"92","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"93","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":18},{"ruleId":"76","severity":1,"message":"81","line":7,"column":10,"nodeType":"78","messageId":"79","endLine":7,"endColumn":21},"no-unused-vars","'removeTag' is defined but never used.","Identifier","unusedVar","'tagReducer' is defined but never used.","'useSelector' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["97"],"'React' is defined but never used.","'navigate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [isNewItem, match.params.id, match.path]",{"range":"102","text":"103"},"Update the dependencies array to be: [activated, match.path]",{"range":"104","text":"105"},[1691,1703],"[isNewItem, match.params.id, match.path]",[480,491],"[activated, match.path]"]