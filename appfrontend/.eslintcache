[{"/app/src/index.js":"1","/app/src/components/App.js":"2","/app/src/redux/combineReducers.js":"3","/app/src/components/NavigationBar.js":"4","/app/src/components/NewItem.js":"5","/app/src/components/HomePage.js":"6","/app/src/redux/database.js":"7","/app/src/redux/NavigationBar.js":"8","/app/src/components/Authentication/Login.js":"9","/app/src/components/ToDoList.js":"10","/app/src/components/FilterBar.js":"11","/app/src/api/API_LINK.js":"12","/app/src/api/API_CRUD.js":"13","/app/src/components/ToDoCard.js":"14","/app/src/components/Authentication/AuthenticatedRoutes.js":"15","/app/src/api/API_AUTHEN.js":"16","/app/src/components/Authentication/NotFoundPage.js":"17","/app/src/components/WelcomePage.js":"18","/app/src/redux/userID.js":"19","/app/src/redux/userName.js":"20","/app/src/components/Authentication/NonAuthenticatedRoutes.js":"21","/app/src/components/ToDoCardContent.js":"22","/app/src/components/LoadSpinner.js":"23","/app/src/redux/sortType.js":"24","/app/src/redux/filterTag.js":"25","/app/src/redux/filterDueDate.js":"26"},{"size":336,"mtime":1609869024520,"results":"27","hashOfConfig":"28"},{"size":1522,"mtime":1610723432940,"results":"29","hashOfConfig":"28"},{"size":698,"mtime":1610430301820,"results":"30","hashOfConfig":"28"},{"size":2359,"mtime":1610517734410,"results":"31","hashOfConfig":"28"},{"size":5979,"mtime":1610724485620,"results":"32","hashOfConfig":"28"},{"size":319,"mtime":1610434284700,"results":"33","hashOfConfig":"28"},{"size":321,"mtime":1609869079760,"results":"34","hashOfConfig":"28"},{"size":559,"mtime":1609869082930,"results":"35","hashOfConfig":"28"},{"size":3044,"mtime":1610434507620,"results":"36","hashOfConfig":"28"},{"size":3202,"mtime":1610434636570,"results":"37","hashOfConfig":"28"},{"size":3365,"mtime":1610724615300,"results":"38","hashOfConfig":"28"},{"size":520,"mtime":1610725155930,"results":"39","hashOfConfig":"28"},{"size":2539,"mtime":1610434425090,"results":"40","hashOfConfig":"28"},{"size":1415,"mtime":1610517727350,"results":"41","hashOfConfig":"28"},{"size":1035,"mtime":1610470780880,"results":"42","hashOfConfig":"28"},{"size":2654,"mtime":1610438464210,"results":"43","hashOfConfig":"28"},{"size":712,"mtime":1610530358170,"results":"44","hashOfConfig":"28"},{"size":1585,"mtime":1610724513390,"results":"45","hashOfConfig":"28"},{"size":448,"mtime":1610367157390,"results":"46","hashOfConfig":"28"},{"size":452,"mtime":1610357468150,"results":"47","hashOfConfig":"28"},{"size":881,"mtime":1610471286970,"results":"48","hashOfConfig":"28"},{"size":1156,"mtime":1610434332490,"results":"49","hashOfConfig":"28"},{"size":258,"mtime":1610434378390,"results":"50","hashOfConfig":"28"},{"size":528,"mtime":1610434641920,"results":"51","hashOfConfig":"28"},{"size":364,"mtime":1610430145212,"results":"52","hashOfConfig":"28"},{"size":545,"mtime":1610432716190,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"19yot3",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/app/src/index.js",[],["109","110"],"/app/src/components/App.js",[],"/app/src/redux/combineReducers.js",[],"/app/src/components/NavigationBar.js",[],"/app/src/components/NewItem.js",["111"],"/app/src/components/HomePage.js",[],"/app/src/redux/database.js",[],"/app/src/redux/NavigationBar.js",[],"/app/src/components/Authentication/Login.js",[],"/app/src/components/ToDoList.js",["112","113"],"import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { XMasonry, XBlock } from \"react-xmasonry\";\r\nimport ToDoItem from \"./ToDoCard\";\r\nimport { getDatabase } from \"../api/API_CRUD\";\r\nimport \"./CSS/ToDoList.css\";\r\nimport LoadSpinner from \"./LoadSpinner\";\r\nimport { change_db } from \"../redux/database\";\r\nimport { store } from \"../redux/combineReducers\";\r\n\r\nconst ToDoList = ({ match }) => {\r\n  const activated = useSelector((state) => state.navigationState);\r\n  const currentDatabase = useSelector((state) => state.databaseState);\r\n  const currentTag = useSelector((state) => state.tagState);\r\n  const isSortingByUpdateDate = useSelector((state) => state.sortState);\r\n  const filterDueDateDaysBy = useSelector((state) => state.dueDateState);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    store.dispatch(change_db([]));\r\n    setLoading(true);\r\n    const databaseFn = async () => {\r\n      await getDatabase(match.path !== \"/incomplete\");\r\n      setLoading(false);\r\n    };\r\n    databaseFn();\r\n  }, [activated]);\r\n\r\n  const filterBasedOnTag = (jsonObject) => {\r\n    // If currentTag is not empty, then we will filter based on currentTag\r\n    if (currentTag.length > 0) {\r\n      if (jsonObject.tag_list.filter((e) => currentTag.indexOf(e) !== -1).length > 0) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      // If currentTag is empty, then no filter is applied\r\n      return true;\r\n    }\r\n  };\r\n  const filterBasedOnDueDate = (jsonObject) => {\r\n    if (!filterDueDateDaysBy) {\r\n      return true;\r\n    } else {\r\n      if (jsonObject.due_date) {\r\n        const today = new Date();\r\n        return today.setDate(today.getDate() + filterDueDateDaysBy) - new Date(jsonObject.due_date) >= 0;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Comparators\r\n  const sortBasedOnUpdate = (a, b) => {\r\n    return new Date(b.updated_at) - new Date(a.updated_at);\r\n  };\r\n  const sortBasedOnDueDate = (a, b) => {\r\n    if (a.due_date === b.due_date) {\r\n      return 0;\r\n    } else if (a.due_date === null) {\r\n      return 1;\r\n    } else if (b.due_date === null) {\r\n      return -1;\r\n    } else {\r\n      return new Date(a.due_date) - new Date(b.due_date);\r\n    }\r\n  };\r\n  // This has very high complexity, may bottleneck here.\r\n  const renderDatabase = currentDatabase\r\n    .filter((x) => filterBasedOnTag(x))\r\n    .filter((x) => filterBasedOnDueDate(x))\r\n    .sort((a, b) => (isSortingByUpdateDate ? sortBasedOnUpdate(a, b) : sortBasedOnDueDate(a, b)))\r\n    .map((jsonObject) => {\r\n      return (\r\n        <XBlock key={jsonObject.id}>\r\n          <div className=\"XMasonryCard\">\r\n            <ToDoItem item={jsonObject} />\r\n          </div>\r\n        </XBlock>\r\n      );\r\n    });\r\n\r\n  // If renderDatabase is loading, we'll need buffer some things first right\r\n  const displayDatabase = useCallback(() => {\r\n    return (\r\n      <XMasonry style={{ marginTop: \"5vh\" }} maxColumns={4}>\r\n        {renderDatabase}\r\n      </XMasonry>\r\n    );\r\n  }, [currentTag, renderDatabase]);\r\n\r\n  return loading ? <LoadSpinner text=\"Loading data..\" /> : displayDatabase();\r\n};\r\n\r\nexport default ToDoList;\r\n","/app/src/components/FilterBar.js",["114","115","116"],"/app/src/api/API_LINK.js",[],"/app/src/api/API_CRUD.js",[],"/app/src/components/ToDoCard.js",[],"/app/src/components/Authentication/AuthenticatedRoutes.js",[],"/app/src/api/API_AUTHEN.js",[],"/app/src/components/Authentication/NotFoundPage.js",["117"],"import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Segment } from \"semantic-ui-react\";\nimport \"../CSS/NewItem.css\";\n\nconst NotFoundPage = () => {\n  const history = useHistory();\n  return (\n    <div className=\"NewItemBodyNonAuthenticated\">\n      <div style={{ width: \"70vh\" }}>\n        <Segment>\n          <h1> Page not found! </h1>\n          <p> Hello, the page that you are finding is not found!</p>\n          <p> How did you even get here? </p>\n          <p> Press here to return back to the welcome page.</p>\n          <button onClick={() => history.push(\"/\")}> Welcome Page </button>\n        </Segment>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","/app/src/components/WelcomePage.js",[],"/app/src/redux/userID.js",[],"/app/src/redux/userName.js",[],"/app/src/components/Authentication/NonAuthenticatedRoutes.js",[],"/app/src/components/ToDoCardContent.js",[],"/app/src/components/LoadSpinner.js",[],"/app/src/redux/sortType.js",[],"/app/src/redux/filterTag.js",[],"/app/src/redux/filterDueDate.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":71,"column":6,"nodeType":"124","endLine":71,"endColumn":18,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":27,"column":6,"nodeType":"124","endLine":27,"endColumn":17,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":91,"column":6,"nodeType":"124","endLine":91,"endColumn":34,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":14,"column":9,"nodeType":"132","messageId":"133","endLine":14,"endColumn":27},{"ruleId":"122","severity":1,"message":"134","line":49,"column":6,"nodeType":"124","endLine":49,"endColumn":23,"suggestions":"135"},{"ruleId":"122","severity":1,"message":"136","line":54,"column":6,"nodeType":"124","endLine":54,"endColumn":13,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":19},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isNewItem' and 'match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'match.path'. Either include it or remove the dependency array.",["142"],"React Hook useCallback has an unnecessary dependency: 'currentTag'. Either exclude it or remove the dependency array.",["143"],"no-unused-vars","'filterDueDateState' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'isCompleted'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["145"],"'Container' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [isNewItem, match.params.id, match.path]",{"range":"156","text":"157"},"Update the dependencies array to be: [activated, match.path]",{"range":"158","text":"159"},"Update the dependencies array to be: [renderDatabase]",{"range":"160","text":"161"},"Update the dependencies array to be: [currentDatabase, isCompleted]",{"range":"162","text":"163"},"Update the dependencies array to be: [dispatch, match]",{"range":"164","text":"165"},[2736,2748],"[isNewItem, match.params.id, match.path]",[1088,1099],"[activated, match.path]",[3057,3085],"[renderDatabase]",[1895,1912],"[currentDatabase, isCompleted]",[2066,2073],"[dispatch, match]"]